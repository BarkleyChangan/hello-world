# 手动分区
1. 分区
/boot：1024mb	标准分区格式
swap： 2048mb	标准分区格式
/：    剩余所有空间	采用lvm卷组格式

2. 分区(40G)
/boot 1024mb
/     20G
/home 10G
/swap 2048mb
/var  剩余空间

3. 分区(40G)
/biosboot: 2048Kib 标准分区格式
/boot：1024mb      标准分区格式 xfs
/home: 5G          LVM 方式		xfs
/swap：2048mb      LVM 方式     swap
/:     10G         LVM 方式     xfs


# 处理器配置
“处理器数量”表示虚拟机使用的CPU个数，一般是1个；
“每个处理器的核心数量”表示虚拟机使用的CPU是几核的；
上面这两个参数请根据你的物理机实际情况进行选择，如果设置不正确会造成虚拟机卡顿、死机，我们可以使用默认参数；

# 选择网络连接类型，这里选择“使用桥接网络”，各位安装虚拟机过程根据需要自行选择，安装向导中已经针对各种模式进行了比较规范的说明，这里补充说明如下：
1）使用桥接网络：虚拟机ip与本机在同一网段，本机与虚拟机可以通过ip互通，本机联网状态下虚拟机即可联网，同时虚拟机与本网段内其他主机可以互通，这种模式常用于服务器环境架构中。
2）使用网络地址转换（NAT）：虚拟机可以联网，与本机互通，与本机网段内其他主机不通。
3）使用仅主机模式网络：虚拟机不能联网，与本机互通，与本机网段内其他主机不通。

# 设备类型
标准分割区：就是我们一直谈的分割槽啊！类似/dev/vda1之类的分割就是了。
LVM：       这是一种可以弹性增加/削减档案系统容量的装置设定，我们会在后面的章节持续介绍LVM这个有趣的东西！
LVM紧张供应：这个名词翻译的超奇怪的！其实这个是LVM的进阶版！与传统LVM直接分配固定的容量不同，这个『 LVM紧张供应』的项目，可以让你在使用多少容量才分配磁碟多少容量给你，所以如果LVM装置内的资料量较少，那么你的磁碟其实还可以作更多的资料储存！而不会被平白无故的占用！这部份我们也在后续谈到LVM的时候再来强调！

# 文件系统类型
ext2/ext3/ext4：Linux早期适用的档案系统类型。由于ext3/ext4档案系统多了日志的记录，对于系统的复原比较快速。不过由于磁碟容量越来越大，ext家族似乎有点挡不住了～所以除非你有特殊的设定需求，否则近来比较少使用ext4项目了！
swap：就是磁碟模拟成为记忆体，由于swap并不会使用到目录树的挂载，所以用swap就不需要指定挂载点喔。
BIOS Boot：就是GPT分割表可能会使用到的项目，若你使用MBR分割，那就不需要这个项目了！
xfs：这个是目前CentOS预设的档案系统，最早是由大型伺服器所开发出来的！他对于大容量的磁碟管理非常好，而且格式化的时候速度相当快，很适合当今动不动就是好几个TB的磁碟的环境喔！因此我们主要用这玩意儿！
vfat：同时被Linux与Windows所支援的档案系统类型。如果你的主机硬碟内同时存在Windows与Linux作业系统，为了资料的交换，确实可以建置一个vfat的档案系统喔！

# CentOS 6网络配置
1. vi /etc/sysconfig/network-scripts/ifcfg-eth0

DEVICE=eth0
HWADDR=00:0C:29:EC:B0:9F
TYPE=Ethernet
UUID=c7aca2a8-3e55-4ca1-b88c-bc050142ef24
ONBOOT=yes              #开启自动启用网络连接
NM_CONTROLLED=yes
BOOTPROTO=static        #启用静态IP地址
IPADDR=192.168.57.11    #设置IP地址
NETMASK=255.255.255.0   #设置子网掩码
GATEWAY=192.168.57.2    #设置网关
DNS1=192.168.57.2       #设置域名服务器

如果是Clone虚拟机的Linux环境需要:
a. vi /etc/udev/rules.d/70-persistent-net.rules
删除NAME="eth0"的一行并修改余下的一行NAME="eth0",记录ATTR的MAC地址
b. vi /etc/sysconfig/network-scripts/ifcfg-eth0
修改HWADDR和UUID

2. service network restart
测试网络是否联通。
ping网关：输入命令“ping 192.168.57.2”
pingWindows地址：输入命令“ping 192.168.57.1”

3. 设置DNS服务
vi /etc/resolv.conf
nameserver 114.114.114.114

测试外网是否联通
ping www.baidu.com

# CentOS 7.0默认安装好之后是没有自动开启网络连接的！进入网络配置文件目录
cd  /etc/sysconfig/network-scripts/
#编辑配置文件，添加修改以下内容
vi ifcfg-eno16777736 

HWADDR=00:0C:29:8D:24:73
TYPE=Ethernet
BOOTPROTO=static        #启用静态IP地址
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eno16777736
UUID=ae0965e7-22b9-45aa-8ec9-3f0a20a85d11
ONBOOT=yes              #开启自动启用网络连接
IPADDR0=192.168.21.128  #设置IP地址
PREFIXO0=24             #设置子网掩码
GATEWAY0=192.168.21.2   #设置网关
DNS1=8.8.8.8            #设置主DNS
DNS2=8.8.4.4            #设置备DNS
:wq!                    #保存退出

service network restart   #重启网络
ping www.baidu.com  	  #测试网络是否正常
ip addr  		          #查看IP地址

# 配置Java环境
a. 查看系统是32位还是64位
uname -a
b. 查看系统是否自带安装jdk
java -version
rpm -qa | grep java
rpm -e --nodeps 完整上一步查询到的包名
c. 拷贝jdk的tar.gz包到/usr/local目录下
tar -zxvf *.tar.gz
d. vi /etc/profile打开文件并在最后加入如下内容:
export JAVA_HOME=/usr/local/jdk1.8.0_171
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$JAVA_HOME/bin:$PATH

保存文件退出后执行: source /etc/profile
e. java -version
f. 拷贝tomcat的tar.gz包到/usr/local目录下
tar -zxvf *.tar.gz
直接启动tomcat即可
g. 防火墙开放8080端口
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT

firewall-cmd --zone=public --permanent --add-port=${my_ssh_port}/tcp
firewall-cmd --reload

service iptables save
/etc/rc.d/init.d/iptables restart
/etc/init.d/iptables status

