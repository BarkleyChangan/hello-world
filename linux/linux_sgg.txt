##### 尚硅谷-云计算-Linux系统管理 #####
# 硬件设备文件名
IDE硬盘               /dev/hd[a-d]
SCSI/STAT/USB硬盘     /dev/sd[a-p]
光驱                  /dev/cdrom或/dev/sr0
软盘                  /dev/fd[0-1]
打印机(25针)          /dev/lp[0-2]
打印机(USB)           /dev/usb/lp[0-15]
鼠标                  /dev/mouse

# 分区设备文件名
/dev/hda1(IDE硬盘接口)
/dev/sda1(SCSI硬盘接口、SATA硬盘接口)

# 挂载点
使用已经存在的空目录作为挂载点

# 必须分区
/ 根分区
swap分区(交换分区)
    如果真实内存小于4GB,swap为内存的两倍
    如果真实内存大于4GB,swap和内存一致
    实验环境,不大于2GB
/boot(启动分区,1GB)

# 常用分区
/home 用于文件服务器
/www  用于web服务器

# 配置IP地址(CentOS 6.8以后的版本适用)
setup 通过setup攻击设置IP地址
Use DHCP [ ]
On boot [*] 注意激活onboot=yes
service network restart 重启网络服务
ifconfig 查看网卡是否生效

# 安装日志
/root/install.log 存储了安装在系统中的软件包及其版本信息
/root/install.log.syslog 存储了安装过程中留下的事件记录
/root/anaconda-ks.cfg 以Kickstart配置文件的格式记录安装过程中设置的选项信息

# Linux一级目录结构
/bin      存放系统命令的目录,普通用户和超级用户都可以执行,是/usr/bin目录的软链接
/sbin     存放系统命令的目录,只有超级用户才可以执行,是/usr/sbin目录的软链接
/usr/bin  存放系统命令的目录,普通用户和超级用户都可以执行
/usr/sbin 存放系统命令的目录,只有超级用户才可以执行
/boot     系统启动目录,保存于系统启动相关的文件,如内核文件和启动引导程序(grub)
/dev      设备文件保存位置
/etc      配置文件保存位置.系统内所有采用默认安装方式(rpm安装)的服务配置文件全部保存在此目录中,如用户信息、服务的启动脚本、常用服务的配置文件等
/home     普通用户的家目录.在创建用户时,每个用户要有一个默认登录和保存自己数据的位置,就是用户的家目录,所有普通用户的宿主目录是在/home下建立一个和用户名相同的目录.如用户user1的家目录就是/home/user1
/lib      系统调用的函数库保存位置.是/usr/lib的软链接
/lib64    64位函数库保存位置.是/usr/lib64的软链接
/lost+found 当系统意外崩溃或机器意外关机而产生一些文件碎片放在这里.当系统启动的过程中fsck攻击会检查这里,并修复已经损坏的文件系统.这个目录只在每个分区中出现,例如/lost+found就是根分区的备份恢复目录,/boot/lost+found就是/boot分区的备份恢复目录
/media    挂载目录,系统建议是用来挂载媒体设备的,如软盘和光盘
/misc     挂载目录,系统建议是用来挂载NFS服务的共享目录.
/mnt      挂载目录.早期Linux中只有这一个挂载目录,并没有细分.现在系统建议这个目录用来挂载额外的设备,如U盘、移动硬盘和其他操作系统的分区
/opt      第三方安装的软件保存位置.这个目录是放置和安装其他软件的位置,手工安装的源码包软件都可以安装到这个目录中
/proc     虚拟文件系统.该目录中的数据并不保存在硬盘上,而是保存到内存中.主要保存系统的内核、进程、外部设备状态和网络状态等.如/proc/cpuinfo是保存CPU信息的,/proc/devices是保存设备驱动列表的,/proc/filesystems是保存文件系统列表的,/proc/net是保存网络协议信息的
/sys      虚拟文件系统.和/proc目录相似,该目录中的数据都保存在内存中,主要保存与内核相关的信息
/root     root的宿主目录,普通用户宿主目录在/home下,root宿主目录在/下
/run      系统运行时产生的数据,如ssid,pid等相关数据./var/run是此目录的软链接
/srv      服务数据目录.一些系统服务启动之后,可以在这个目录中保存所需要的数据
/tmp      临时目录.系统存放临时文件的目录,在该目录下所有用户都可以访问和写入.建议此目录中不能保存重要数据,最好每次开机都该目录清空
/usr      系统软件资源目录.注意usr不是user的缩写,而是"UNIX Software Resource"的缩写,所以不是存放用户数据的目录,而是存放系统软件资源的目录.系统中安装的软件大多数保存在这里
/usr/lib  应用程序调用的函数库保存位置
/usr/local 手工安装的软件保存位置.建议源码包软件安装在这个位置
/usr/share 应用程序的资源文件保存位置,如帮助文档、说明文档和字体目录
/usr/src   源码包保存位置.我们手工下载的源码包和内核源码包都可以保存在这里
/usr/src/kernels 内核源码保存位置
/var       动态数据保存位置.主要保存缓存、日志以及软件运行所产生的文件
/var/www/html RPM包安装的Apache的网页主目录
/var/lib   程序运行中需要调用或改变的数据保存位置.如MySQL的数据库保存在/var/lib/mysql目录中
/var/log   系统日志保存位置
/var/run   一些服务和程序运行后,他们的PID（进程ID）保存位置,是/run目录的软链接
/var/spool 放置队列数据的目录.就是排队等待其他程序使用的数据,比如邮件队列和打印队列
/var/spool/mail 新收到的邮件队列保存位置.系统新收到的邮件会保存在此目录中
/var/spool/cron 系统的定时任务队列保存位置.系统的计划任务会保存这里

# 登录终端
字符终端 tty1~6 alt+F1~F6
图形终端 tty7   ctrl+alt+F7(按住3秒,需要安装启动图形界面)
远程终端 pts/0~255

# 关机和重启命令
sync 数据同步命令,可以让暂时保存在内存中数据同步到硬盘上
shutdown -r now 这条命令在重启时会正常保存和终止服务器中正在运行的程序,是安全重启命令
         -c     取消已经执行的shutdown命令
         -h     关机
         -r     重启

# ls命令
ls -ahl

# 添加删除目录(extundelete实现Linux下文件/文件夹数据恢复)
mkdir -p 递归建立所需目录
rmdir    删除空目录
rm -rf   删除目录

# 查看文件信息
stat

# 查看文件内容
cat -nA 显示行号,隐藏符号

# 复制
cp -r 复制目录
cp -a 相当于-dpr,目标文件和源文件一模一样

# 修改所有者和所属组
chown user1:user1 abc.txt
chgrp user1 abc.txt

# umask默认权限
umask 022
/etc/profile 环境变量配置文件(修改umask值永久生效的配置文件)

# 搜索命令的命令
whereis 搜索系统命令的命令,查找命令的同时查找帮助文档
which   搜索系统命令的命令,查找命令的同时查找别名

# 搜索文件命令
locate 按照文件名搜索普通文件,按照数据库搜,速度快消耗资源小但只能按文件名搜索.数据库位置/var/lib/mlocate/mlocate.db
updatedb 更新数据库

find -name  按文件名查找
     -iname 按文件名查找,不区分文件名大小
     -inum  按inode号查找
     -size [+-]28[ckM] 按文件大小查找
     -perm  按权限查找
           -权限 全部包含权限的文件
           +权限 包含任意一个权限的文件
     -nouser 查找没有所有者的文件
     -type d 查找目录
           f 查找文件
           l 查找软链接文件
     -atime [+-] 时间 按文件访问时间搜索
     -mtime [+-] 时间 按文件修改时间搜索
     -ctime [+-] 时间 按文件状态时间搜索
     -a     and逻辑与
     -o     or逻辑或
     -not   not逻辑非
find 搜索路径 [选项] 搜索内容 -exec 命令2 {} \; 命令1的结果由命令2操作
find 搜索路径 [选项] 搜索内容 -ok 命令2 {} \;   命令1的结果由命令2操作,交互式处理

# grep:补充命令
grep [选项] 搜索内容 文件名
      -i           忽略大小写
      -n           显示行号
      --color=auto 关键字用颜色显示

# 压缩和解压缩命令
zip   [选项]  压缩包名 源文件或源目录
       -r     压缩目录
unzip [选项]  压缩包名
       -d     指定解压缩位置

gzip  [选项]  源文件
       -c     将压缩数据输出到标准输出中,可以用于保留源文件
       -d     解压缩
       -r     压缩目录 (不会打包,只会把目录内的文件一个一个压缩)
gunzip 压缩文件或目录

bzip2 [选项] 源文件 (不能压缩目录)
       -d    解压缩
       -k    压缩时,保留源文件
       -v    显示压缩的详细信息
bunzip2 压缩文件或目录

# 打包和解打包命令
tar [选项] [-f 压缩包名] 源文件或目录
     -c                 打包
     -f                 指定压缩包的文件名
     -v                 显示打包文件过程
     
     -x                 解打包
     -t                 测试,就是不解打包,只是查看包中有哪些文件
     -C                 指定解打包位置(此选项必须放在压缩文件名后面)

     -z                 压缩和解压缩.tar.gz格式
     -j                 压缩和解压缩.tar.bz2格式

# 痕迹命令
w       显示正在登录用户的信息,/var/run/utmp
who     显示正在登录用户的信息,/var/run/utmp
last    显示所有登录过的用户信息,/var/log/wtmp
lastlog 显示系统中所有用户最后一次登录时间,/var/log/lastlog
lastb   显示错误登录信息,/var/log/btmp

# 挂载命令
驱动保存位置: /lib/modules/2.6.32-696.el6.x86_64/kernel
mount -l 查询系统中已经挂载的设备,-l显示卷标名称
mount -a 依据配置文件/etc/fstab的内容,自动挂载
mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点
                    -o remount  重新挂载已经挂载的文件系统,一般用于指定修改特殊权限

挂载光盘(CentOS5.x以前光盘设备文件名是/dev/hdc,CentOS6.x以后光盘设备文件名是/dev/sr0)
1. 虚拟机 -> 设置 -> 硬件 -> CD/DVD -> 设备状态 -> 已连接(勾选)
2. mkdir /mnt/cdrom
3. mount [-t iso9660] /dev/sr0 /mnt/cdrom
4. umount /dev/sr0
5. umount /mnt/cdrom

挂载U盘
fdisk -l 查看U盘的设备文件名
mount -t vfat -o iocharset=utf8 /dev/sdb1 /mnt/usb
umout /dev/sdb1

开机自动挂载
/etc/fstab

# vi编辑器
vim -o abc bcd 上下分屏打开两个文件
vim -O abc bcd 左右分屏打开两个文件
ctrl+w 上下左右箭头  在两个文件切换
插入命令:
a 字符后插入
A 行尾插入
i 字符前插入
I 行首插入
o 光标下插入新航
O 光标上插入新航

编辑模式:
:n   移动到第几行
:w   保存不退出
   新文件名 另存
:q   不保存退出
:wq  保存退出
:q!  强制不保存退出
:wq! 强制保存退出
:set nu/nonu      显示行号
:syntax on/off    显示颜色帮助
:set hlsearch/nohlsearch 查找字符串高亮显示
:set ruler/norule        是否显示右下角状态栏
:set showmode/noshowmode 是否显示左下角状态栏
:set list/nolist         是否显示隐藏字符
/查找内容 从光标所在行向下查找
?查找内容 从光标所在行向上查找
n        下一个
N        上一个
:1,10s/old/new/g 替换1到10行所有old为new
:%s/old/new/g    替换整个文件的old为new
:r 文件名        把文件内容导入光标位置
:!命令           在vim中执行系统命令
:r !命令         把命令结果导入光标所在行

命令模式快捷键:
hjkl 左、下、上、右
gg   至文件头
G    至文件尾
^    至行首
$    至行尾
x    删除单个字母
nx   删除n个字母
dd   删除单行
ndd  删除n行
dG   从光标所在行删除至行尾
:n1,n2d 删除指定范围的行
p       粘贴到光标下行
P(大)   粘贴到光标上行
u       撤消
ctrl+r  反撤消
yy      复制单行
nyy     复制多行
r       替换光标所在处的字符(不用进入输入模式)
R       从光标所在处开始替换字符,按ESC结束

# 软件安装
查看函数库所在软件包: http://www.rpmfind.net
已安装数据库: /var/lib/rpm
rpm -ivh 包全名
    -i   安装
    -v   显示更详细的信息
    -h   显示安装进度
    --force 不管是否安装都会重新安装
    --test  不会安装只是检测

# 软件升级
rpm -Uvh 包全名 升级安装,如果没有安装系统直接安装
    -Fvh 包全名 升级安装,如果没有安装则不会安装,必须要有旧版本才能升级

# 软件卸载
rpm -e 包名
    --nodeps 不检查依赖性
    -e       卸载

# 查询软件
rpm -q   包名        查询是否安装包
    -qa             查询系统中的所有安装软件包
    -qi  包名        查询安装包的软件信息
    -qip 包全名      查询未安装包的软件信息
    -ql  包名        查询安装包安装的目录
    -qlp 包全名      查询未安装包安装的目录
    -qf  系统文件名   查询系统文件属于哪个软件包
    -qR  包名        查询软件包的依赖性

# 软件验证
rpm -V  包名         校验指定RPM包中的文件
    -Vf 系统文件名    校验某个系统文件是否被修改

数字证书导入:
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6
rpm -qa | grep gpg-pubkey  查询系统中安装好的数字证书

# 提取RPM包中的文件
rpm2cpio 包全名 | cpio -idv .文件绝对路径

# yum安装
yum源配置文件: /etc/yum.repos.d/*.repo
yum list   包名    搜索yum源中是否包含某个软件包
yum search 关键字  搜索关键字中是否包含某个软件包
yum info   包名    查看软件包信息
yum -y install 包名 安装
yum -y update  包名 升级(不加包名升级本机所有软件包)
yum remove  包名    卸载

# 源码安装
1. 下载软件包
2. 解压缩
3. 进入解压目录
4. ./configure 
   a. 在安装之前需要检测系统环境是否符合安装要求
   b. 在定义需要的功能选项(./configure --prefix=安装路径)
   c. 把系统环境的检查结果和定义好的功能选项写入Makefile文件,后续的编译和安装需要依赖这个文件
5. make 编译 
   make会调用gcc编译器,并读取Makefile文件中的信息进行系统软件编译.编译的目的就是把源码程序转变为被Linux识别的可执行文件,这些可执行文件保存在当前目录下
6. make clean 清空编译内容
   如果在./configure或make编译中报错,那么我们在重新执行命令前一定要记得执行make clean命令,它会情况Makefile文件或编译产生的.o头文件
7. make install 编译安装
   这才是真正的安装过程,一般会写清楚程序的安装位置.如果忘记指定安装目录,则可以把这个命令执行过程保存下来,以备将来删除使用

# 补丁
diff -Naur /root/test/old.txt /root/test/new.txt > txt.path
path -pn < 补丁文件 n为数字.代表按照补丁文件中的路径指定更新文件的位置

# 添加用户
/etc/skel

/etc/default/useradd
/etc/login.defs
useradd user1
        -g 指定初始组
        -G 指定附加组
passwd user1 (添加完用户后一定要设置密码)
       -l  锁定用户,仅root可用
       -u  解锁用户,仅root可用
       --stdin 通过管道符输出的数据作为用户的密码

chage -d 0 把shadow文件中第3个字段修改为0(登录必须修改密码)

# 修改用户信息
usermod 用户名
        -g 组名 指定初始组
        -G 组名 指定附加组

# 删除用户
userdel user1
        -r 删除用户的家目录

# 切换用户
su user1
   -  连带用户的环境变量一起切换
   -c 仅执行一次命令不切换用户

# 添加用户组
groupadd usergroup1

# 删除用户组
groupdel usergroup1 

# 用户添加进组
gpasswd -a 用户名 组名 用户加入组
        -d 用户名 组名 用户从组中删除

# 修改有效组(当前登录用户新建文件的默认所属组)
newgrp 组名

# 开启ACL权限
dumpe2fs -h /dev/sda3  查看是否开启ACL权限

mount -o remount,acl / 手工开启分区的ACL权限(临时生效)
vim /etc/fstab         手工开启分区的ACL权限(永久生效)
mount -o remount /

getfacl 文件名          查询文件的ACL权限
setfacl [选项] 文件名    设置文件的ACL权限
         -m             设置ACL权限
         -b             删除ACL权限
         -x:用户        删除单个用户的ACL权限
         -R             递归(针对已存在的文件生效)
setfacl -m u:用户名:权限 文件名
setfacl -m g:组名:权限 文件名
setfacl -m d:u:用户名:7 -R /www  d:(针对以后生成的文件生效)

# sudo授权
visudo
root ALL=(ALL) ALL
用户名(%组名) 被管理主机的IP=(可使用的身份) 授权命令(绝对路径)
user1 ALL=(ALL)
user1 ALL=/usr/bin/passwd [a-zA-Z]*, !/usr/bin/passwd "", !/usr/bin/passwd root 不允许修改root密码

sudo -l 查看可用授权

# SUID,SGID,SBIT
SUID:(文件)
1.可执行二进制程序文件才能才能设定SUID
2.命令执行者要对程序有x执行权限
3.命令执行者在执行该程序时获得该程序文件属主的身份
4.SUID只有在程序执行过程中有效
SGID:(文件和目录)
1.只有可执行的二进制程序才能设置SGID
2.命令执行者要对该程序拥有x执行权限
3.命令执行者在执行程序的时候,组身份升级为该程序文件的属组
4.SGID只有在程序执行过程中有效
SBIT:(目录)
1.只对目录有效
2.普通用户对该目录拥有w和x权限
3.普通用户只能删除自己建立的文件

# 文件系统属性
chattr [+-=] [选项]
              i     针对文件:相当于给文件枷锁
                    针对目录:只能修改目录下文件的数据,不能建立和删除文件
              a     针对文件:只能在文件中增加数据,不能改、删
                    针对目录:只能在目录中建立和修改文件,不允许删除文件
lsattr 选项 文件名
       -a           显示所有文件和目录
       -d           若目标是目录,仅列出目录本身属性,而不是子文件

# 硬盘管理命令
df -h 统计磁盘大小
du -h 统计目录大小
du -sh * | sort -rh 查看目录下所有文件大小并按从大到小排序
fsck -y /dev/sdb1  文件系统修复命令
dumpe2fs /dev/sda3 显示磁盘状态
         -h        只看超级块信息
stat test.sh       查看文件详细时间
file 文件名         查看文件类型
type 命令名         查看命令类型
fdisk -l           查看系统所有硬盘及分区
      sdb          MBR分区
parted sdb         GPT分区
mkfs -t ext4 /dev/sdb1 格式化
free -h            显示内存

# 建立testfile文件,指定大小60MB
dd if=/dev/zero of=/disk/testfile bs=1M count=60

# Bash命令
快捷键:
ctrl+A 移动到行首
ctrl+E 移动到行尾
ctrl+U 剪切光标之前的命令
ctrl+Y 粘贴ctrl+U剪切的内容

Bash标准输入输出
0 /dev/stdin  键盘
1 /dev/stdout 显示器
2 /dev/stderr 显示器
把正确与错误命令执行结果写入文件:
命令 >> 文件名 2>&1
命令 &>> 文件名
正确与错误命令执行结果分别写入不同的文件
命令 >> 文件名1 2>>文件名2

set -u 调用不存在的变量会报错

预定义变量:
$? 上一条命令执行的返回状态0:正确执行
$$ 当前进程的进程号PID
$! 后台运行的最后一个进程的进程号PID

# 系统运行级别
0 关机
1 单用户模式,可以想象为Windows的安全模式
2 不全的命令模式,不含NFS服务
3 完全的敏玲模式,就是标准字符界面
4 系统保留
5 图形模式
6 重启
runlevel
系统默认运行级别: /etc/inittab(CentOS6)
/etc/rc.d/rc.local(/etc/rc.local): 用户登录之前读取

# 光盘修复
系统被挂在到/mnt/sysimage下,执行一下命令让系统成为根环境
chroot /mnt/sysimage

# 服务
查看独立服务的自启动状态: chkconfig --list

RPM包服务(/etc/rc.d/init.d/):
a. 独立服务
   启动:
   /etc/init.d/httpd start
   service 独立服务名 start|stop|restart
   自启动:
   chkconfig [--level 运行级别] httpd on|off
   修改/etc/rc.local: /etc/rc.d/init.d/httpd start
   ntsysv 
b. 基于xinetd服务
   启动:
   vi /etc/xinetd.d/telnet -> disable=yes改为disable=no
   service xinetd restart
   自启动:
   chkconfig telnet on(基于xinetd服务没有运行级别,所有不能添加--level参数)
   ntsysv
源码包服务:
   启动:
   /usr/local/apache2/bin/apachectl start|stop(源码包根据绝对路径启动,最好不要restart)
   自启动:
   修改/etc/rc.local文件: /usr/local/apache2/bin/apachectl start|stop

# 进程
pstree -p 显示进程IP号
       -u 显示进程的所属用户
ps aux
top 
    P: 按CPU使用率排序
    M: 按内存使用率排序
    N: 按PID排序
    T: 按CPU累积运算时间排序,也就是TIME+项
    k: 按PID号,给与某个进程一个信号,一般用于终止某个进程.信号9是强制终止
    r: 按PID号,给某个进程重设优先级
    q: 退出top
top -b -n 1 > /root/top.log 将所有进程信息保存在文件中
kill -1 PID 重启
kill -9 PID 强制杀进程
killall -9 进程名称
pkill [信号] [选项] 进程名称
      -t 终端号
pkill -9 -t pts/0 踢用户
后台进程:
1. 命令 &,放入后台的进程为运行状态
2. 命令执行过程中ctrl + z,放入后台的进程为暂停状态
查看后台进程: jobs
                  -l 进程号
将后台暂停的进程恢复到前台运行:
fg %工作号
将后台暂停的进程恢复到后台运行:
bg %工作号
后台命令脱离登录终端运行:
nohup [命令] &

# 系统资源查看
vmstat [刷新延迟] [刷新次数]
显示开机内核检测信息: dmesg
显示内存使用状态:     free -h
显示CPU信息:         cat /proc/cpuinfo
显示本机登录用户:     w(who)
显示系统内核信息:     uname -a
                           -r
显示系统当前的发行版本:lsb_release -a

# 系统定时任务
一次性执行定时任务: at [选项] 时间
                      -c 工作号   查询具体的任务内容
ctrl+d 保存at任务
at命令要想执行需要atd服务的支持: service atd start
开机启动atd服务:                chkconfig atd on
at白名单:                      /etc/at.deny (系统默认空文件)
at黑名单:                      /etc/at.allow(系统默认不存在)
如果白名单和黑名单文件都不存在只有root可以使用at
查询工作号: atq
删除at任务: atrm 工作号

循环执行定时任务:   crontab
1. crontab -e
2. 编辑/etc/crontab
crontab [选项]
         -e 编辑crontab定时任务(* * * * * 执行任务)
         -l 查询
         -r 删除当前用户所有的crontab任务
第一个*: 0-59
第二个*: 0-23
第三个*: 1-31
第四个*: 1-12
第五个*: 0-7(0和7都代表星期天)
crontab是需要crond服务支持: service crond start
开机启动crond服务:          chkconfig crond on
crontab白名单:                      /etc/cron.deny (系统默认空文件)
crontab黑名单:                      /etc/cron.allow(系统默认不存在)
如果白名单和黑名单文件都不存在只有root可以使用crontab

# 日志文件
错误登录日志(/var/log/btmp): lastb
所有用户最后一次登录时间(/var/log/lastlog): lastlog
所有用户登录、注销系统启动、重启、关机(/var/log/wtmp): last
日志切割配置文件: /etc/logrotate.conf

# 配置IP地址
1.1 setup工具
1.2 vim /etc/sysconfig/network-scripts/ifcfg-eth0
2. service network restart

# netstat:网络命令(CentOS7需要安装net-snmp和net-tools软件包)
netstat -tulnp 查询系统当中开启的所有端口
netstat -an | grep ESTABLISHED | wc -l 统计正在连接的数量
netstat -rn    查看网关

# 网络服务重启失败(重置UUID)
1. vim /etc/sysconfig/network-scripts/ifcfg-eth0    删除MAC地址行
2. rm -rf /etc/udev/rules.d/70-persistent-net.rules 删除MAC地址和UUID绑定文件
3. reboot 重启Linux