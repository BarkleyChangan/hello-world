一、安装Linux操作系统
    1. 安装虚拟机
        a. 文件->新建虚拟机->典型(推荐)->稍后安装操作系统
        b. 如果物理机支持大于4GB以上的单个文件选择"将虚拟磁盘存储为单个文件"
        c. 移除声卡、USB控制器、打印机这些设备
    2. 安装Linux操作系统
        a. 取消勾选"系统时钟使用UTC时间"
    3. 查看内存空间(-m表示以MB的数据存储单位进行显示)
       free -m
    4. 查看磁盘空间(-lh表示方便阅读的数据存储单位显示本地文件系统)
       df -lh
    5. 查看所有网卡
       ifconfig -a
    6. 配置静态IP
       修改/etc/sysconfig/network-scripts/ifcfg-eth0文件
       a. 备份改配置文件
          cp ifcfg-eth0 ifcfg-eth0.bak
       b. 修改文件
          ONBOOT=yes
          BOOTPROTO=static
          IPADDR=192.168.57.5
          NETMASK=255.255.255.0
          GATEWAY=192.168.57.2
          DNS1=192.168.57.2
       c. 使配置生效
          service network reload
          systemctl restart network
       d. 查看当前系统的默认网关、DNS服务器
          route | grep default
    7. 访问测试
       ping 192.168.57.1 -c4

二、安装jdk
    1. mkdir /usr/local/java
    2. 检查jdk安装包
       rpm -qa | grep java
    3. 卸载openjdk
       rpm -e --nodeps tzdata-java-2016g-2.el7.noarch
       rpm -e --nodeps java-1.7.0-openjdk-1.7.0.111-2.6.7.8.el7.x86_64
       rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.111-2.6.7.8.el7.x86_64
       rpm -e --nodeps java-1.8.0-openjdk-1.8.0.102-4.b14.el7.x86_64
       rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.102-4.b14.el7.x86_64
       或者使用: yum remove *openjdk*
    4. 解压
       tar -zxvf jdk-8u171-linux-x64.tar.gz
    5. 设置环境变量
       vi /etc/profile

       # java environment
       export JAVA_HOME=/usr/local/java/jdk1.8.0_171  
       export JRE_HOME=${JAVA_HOME}/jre  
       export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
       export PATH=${JAVA_HOME}/bin:$PATH
    6. 执行profile文件
       source /etc/profile
    7. 检查新安装的jdk
       java -version

三、安装tomcat
    1. mkdir /usr/local/tomcat
    2. 解压
       tar -zxvf apache-tomcat-9.0.10.tar.gz
    3. 配置防火墙
       iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
       # 保存配置 
       service iptables save
       # 重启服务
       /etc/rc.d/init.d/iptables restart
       # 查看已开放端口
       /etc/init.d/iptables status
       # 删除端口（2表示上面的num列）
       /sbin/iptables  -D INPUT 2
    4. 查看防火墙状态
       service iptables status
    5. 使用特定用户启动tomcat
       chown -R nobody:nobody /usr/local/tomcat
       sudo -E -u nobody /usr/local/tomcat/bin/startup.sh

四、安装nginx
    1. 安装必备软件
       yum -y install gcc gcc-c++ wget
    2. 解压
       tar -zxvf nginx-1.10.3.tar.gz
    3. 安装Nginx相关依赖包
       yum -y install pcre-devel openssl-devel
    4. 配置编译选项
       cd nginx-1.10.3
       ./configure --prefix=/usr/local/nginx --with-http_ssl_module
    5. 编译安装
       make && make install
    6. 启动、停止Nginx
       cd /usr/local/nginx/sbin
       ./nginx
       ps aux | grep nginx
       ./nginx -s stop
       ./nginx -s quit
       kill pid
       killall nginx
    7. Nginx其他命令
       nginx -s reload 在Nginx启动的情况下重新加载配置文件
       nginx -s reopen 重新打开日志文件
       nginx -c /特定目录/nginx.conf 以特定目录下的配置文件启动Nginx
       nginx -t 检测当前配置文件是否正确
       nginx -t -c /特定目录/nginx.conf 检测特定目录下的Nginx配置文件是否正确
       nginx -v 显示版本信息
       nginx -V 显示版本信息和编译选项
    8. 查看端口占用
       netstat -tlnp
    9. 配置防火墙
       iptables -I INPUT -p tcp --dport 80 -j ACCEPT
       #指定为IP地址为192.168.78.11开通80端口
       iptables -R INPUT l -s192.168.78.11 -ptcp --dport 80 -j ACCEPT
       service iptables save
    10.查看防火墙状态
       service iptables status
    11.添加环境变量
       ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/nginx
    12.添加系统服务
       vi /etc/init.d/nginx

       #! /bin/bash
       #chkconfig: 35 85 15
       DAEMON=/usr/local/nginx/sbin/nginx
       case "$1" in
         start)
            echo "Starting nginx daemon..."
            $DAEMON && echo "SUCCESS"
         ;;
         stop)
            echo "Stopping nginx daemon..."
            $DAEMON -s quit && echo "SUCCESS"
         ;;
         reload)
            echo "Reloading nginx daemon..."
            $DAEMON -s reload && echo "SUCCESS"
         ;;
         restart)
            echo "Restarting nginx daemon..."
            $DAEMON -s quit
            $DAEMON && echo "SUCCESS"
         ;;
         *)
            echo "Usage:service nginx (start|stop|restart|reload)"
            exit 2
         ;;
       esac

       chmod +x /etc/init.d/nginx
       查看系统所有服务
       chkconfig --list
       设置开机启动Nginx服务
       chkconfig --add nginx
       取消开机启动Nginx服务
       chkconfig --del nginx
    13. 关闭访问日志
        access_log off;
    14. 关闭错误日志
        error_log /dev/null;
    15. 查看Nginx版本及其编译选项
        nginx -V
    16. 配置HTTPS网站
        mkdir /usr/local/nginx/conf/ssl
        cd /usr/lcoal/nginx/conf/ssl
        # 生成服务器RSA私钥
        openssl genrsa -out server.key 2048
        # 生成服务器CSR证书请求文件
        openssl req -new -key server.key -out server.csr
        # CA为服务器认证证书
        openssl x509 -req -days 360 -in server.csr -signkey server.key -out server.crt


五、 Linux命令
    # 查询端口是否开放
      firewall-cmd --query-port=8080/tcp
    # 开放80端口
      firewall-cmd --permanent --add-port=80/tcp
    # 移除端口
      firewall-cmd --permanent --remove-port=8080/tcp
    # 重启防火墙(修改配置后要重启防火墙)
      firewall-cmd --reload

    # 重新读取网卡设备的配置文件
      start_udev

    # 统计连接数
      netstat -n | grep :80 | wc -l
六、自动切割日志
#!/bin/bash
#当前Nginx日志文件存放的目录
logs_path="/usr/local/nginx/logs"
#备份日志文件
mv $logs_path/access.log $logs_path/`date +"%Y%m%d%H%M"`.log
#重新打开Nginx日志
/usr/local/nginx/sbin/nginx -s reopen

chmod +x autolog.sh
crontab -e 编辑当前用户的定时任务
0 0 * * * /usr/local/nginx/logs/autolog.sh > /dev/null 2>&1

crontab -l 显示当前用户的crontab文件内容
crontab -r 删除设置的任务计划

