一、rpm安装
# 解决MySQL 5.5.48依赖问题
yum -y install glibc.i686
yum -y install libncurses.so.5
yum -y install libaio.so.1
yum -y install libz.so.1

# 查看是否安装过MySQL
rpm -qa | grep -i mysql
rpm -e --nodeps mysql-libs-5.1.73-8.el6_8.x86_64

# 卸载系统自带的Mariadb
rpm -qa | grep -i mariadb
rpm -e --nodeps 文件名

# 安装MySQL的Server端
rpm -ivh MySQL-server-5.5.48-1.el6.x86_64.rpm 
rpm -ivh MySQL-client-5.5.48-1.el6.x86_64.rpm

# 查看安装是否成功(安装路径:/var/lib/mysql/)
ps -ef | grep mysql
mysqladmin --version

# 启动MySQL服务
  Starting MySQL...The server quit without updating PID file (/var/lib/mysql/localhost.localdomain.pid).
  [ERROR] Fatal error: Can't open and lock privilege tables: Table 'mysql.host' doesn't exist
  1. mysql_install_db(初始化MySQL)
  2. chown -R mysql:mysql /var/lib/mysql(给MySQL安装目录赋予权限)
  3. service mysql start
  4. service mysql stop
  5. service mysql restart

# 设置MySQL开机自启动
chkconfig mysql on
chkconfig --list | grep mysql
ntsysv
setup

# 设置root密码
/usr/bin/mysqladmin -u root password Server2008

# 开放端口和IP地址
iptables -I INPUT -p tcp --dport 3306 -j ACCEPT
service iptables save
service iptables restart
service iptables status(查看开放端口)

GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'Server2008' WITH GRANT OPTION;
flush privileges;
use mysql;
select user,host from user;

# CentOS7操作MySQL
# 查看状态
systemctl status mysqld
# 启用服务
systemctl enable mysqld
# 禁用服务
systemctl disable mysqld
# 启动服务
systemctl start mysqld
# 重启服务
systemctl restart mysqld
# 停止服务
systemctl stop mysqld
*******************************************************************************
二、源码安装
# 查看是否安装过MySQL
rpm -qa | grep -i mysql
rpm -e --nodeps mysql-libs-5.1.73-8.el6_8.x86_64

# 卸载系统自带的Mariadb
rpm -qa | grep -i mariadb
rpm -e --nodeps 文件名

# 安装依赖包
yum install -y cmake make gcc gcc-c++ bison ncurses ncurses-devel

# 上传安装包到/var/local目录下
mysql-5.7.26.tar.gz
boost_1_59_0.tar.gz

# 解压
cd /usr/local

tar -zxvf mysql-5.7.26.tar.gz
tar -zxvf boost_1_59_0.tar.gz

mv boost_1_59_0 mysql-5.7.26/

# 创建MySQL用户和用户组
groupadd -r mysql
useradd -r -g mysql -s /bin/false -M mysql

# 创建安装目录
mkdir -p /usr/local/mysql/data
mkdir -p /usr/local/mysql/conf

# 预编译
cd mysql-5.7.26

cmake \
-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \
-DMYSQL_DATADIR=/usr/local/mysql/data \
-DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock \
-DWITH_BOOST=/usr/local/mysql-5.7.26/boost/boost_1_59_0 \ #注意此路径是否正确
-DSYSTEMD_PID_DIR=/usr/local/mysql \
-DSYSCONFDIR=/usr/local/mysql/conf \
-DWITH_INNOBASE_STORAGE_ENGINE=1 \
-DWITH_PARTITION_STORAGE_ENGINE=1 \
-DWITH_FEDERATED_STORAGE_ENGINE=1 \
-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
-DWITH_MYISAM_STORAGE_ENGINE=1 \
-DMYSQL_USER=mysql \
-DWITH_SYSTEMD=1 \
-DWITH_DEBUG=0 \
-DWITH_READLINE=1 \
-DWITH_EMBEDDED_SERVER=1 \
-DMYSQL_TCP_PORT=3306 \
-DDEFAULT_CHARSET=utf8mb4 \
-DDEFAULT_COLLATION=utf8mb4_general_ci \
-DENABLE_DTRACE=0 \
-DENABLED_LOCAL_INFILE=1

当出现如下内容时:编译完成
-- Configuring done
-- Generating done

echo $? 查看是否编译成功

# 编译 & 安装
make
make install

# 安装完之后清除临时文件
make clean

rm -rf mysql-boost-5.7.26.tar.gz
rm -rf mysql-boost-5.7.26

# 修改配置文件
vi /usr/local/mysql/conf/my.cnf

[client]
port = 3306
default-character-set=utf8mb4
socket=/usr/local/mysql/mysql.sock
[mysql]
port=3306
default-character-set=utf8mb4
socket=/usr/local/mysql/mysql.sock
[mysqld]
user=mysql
basedir=/usr/local/mysql
datadir=/usr/local/mysql/data
port=3306
character_set_server=utf8mb4
pid-file=/usr/local/mysql/mysqld.pid
socket=/usr/local/mysql/mysql.sock
server-id=1
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,PIPES_AS_CONCAT,ANSI_QUOTES

chown mysql:mysql /usr/local/mysql/conf/my.cnf   #修改配置文件的权限

# 环境变量
vi /etc/profile
在文件末尾加如下:
################################
export PATH=/usr/local/mysql/bin:$PATH
################################

source /etc/profile   #使写入生效

# 修改数据库目录权限
chown -R mysql:mysql /usr/local/mysql
cd /usr/local/mysql/
chmod  755  data/

# 空密码初始化数据库
rm -rf /usr/local/mysql/data/*
cd /usr/local/mysql/bin
./mysqld  \
--initialize \
--user=mysql \                    #指定管理用户
--basedir=/usr/local/mysql \      #指定工作目录
--datadir=/usr/local/mysql/data \ #指定数据文件目录

记录临时密码: ZXGhA2np:kiG

# 创建mysql服务
cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld
chmod +x /etc/init.d/mysqld
chkconfig --add mysqld # 加入系统服务
chkconfig mysqld on    # 开机启动

cp /usr/local/mysql/usr/lib/systemd/system/mysqld.service /usr/lib/systemd/system/
chmod +x mysqld.service
systemctl enable mysqld.service
systemctl daemon-reload    #刷新识别mysqld.service服务
systemctl start mysqld.service
systemctl status mysqld.service

netstat -anpt | grep 3306

# 修改密码
mysql -root -p(使用之前初始化的时候产生的临时密码)
ALTER USER 'root'@'localhost' identified by 'Server2008';   
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'Server2008' WITH GRANT OPTION;         #授权新用户
flush privileges;     #刷新权限

# 添加mysql端口防火墙
netstat -tnlp | grep mysql
iptables -I INPUT -p tcp --dport 3306 -j ACCEPT
service iptables save

firewall-cmd --permanent --zone=public --add-port=3306/tcp #启用3306 tcp 协议网络访问
firewall-cmd --permanent --zone=public --add-port=3306/udp #启用3306 udp 协议网络访问
firewall-cmd --reload

# 创建数据库
CREATE DATABASE IF NOT EXISTS my_db DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_general_ci;

# 创建mysql独立数据库用户
USE my_db;
GRANT USAGE ON *.* TO 'itshop'@'192.168.57.12' IDENTIFIED BY '123456';
GRANT ALL PRIVILEGES ON my_db.* TO 'itshop'@'192.168.57.12';
GRANT SELECT,INSERT,UPDATE,DELETE ON my_db.* to itshop@'%' IDENTIFIED BY '123456';
*******************************************************************************

# MySQL相关路径说明
/var/lib/mysql/		MySQL数据库文件的存放路径		/var/lib/mysql/localhost.localdomain.pid
/usr/share/mysql    配置文件目录					MySQL.server命令以及配置文件
/usr/bin			相关命令目录					mysqladmin,mysqldump等命令
/etc/init.d/mysql   MySQL服务相关脚本

# 主从复制
a. 主机配置,编辑/etc/my.cnf配置文件
log-bin=自己本地路径/mysqlbin-log
server-id=17

service mysql restart 

b. 创建用于主从复制的用户
/usr/local/mysql/bin/mysql -uroot -pServer2008
# 执行如下语句创建用户分配权限:用户名:slave,密码:Server2008,仅客户端192.168.57.11可登录,*.*表示可操作所有的数据库和表
GRANT REPLICATION SLAVE ON *.* TO 'slave'@'192.168.57.11' IDENTIFIED BY 'Server2008';
FLUSH PRIVILEGES;
SHOW MASTER STATUS;  # 记录Position一列的值,配置从库时有用

c. 从机配置,编辑/etc/my.cnf配置文件
server-id=18

service mysql restart

d. 同步主数据库
CHANGE MASTER TO MASTER_HOST='192.168.57.20',
MASTER_USER='slave',
MASTER_PASSWORD='Server2008',
MASTER_LOG_FILE='mysqlbin-log.000001',
MASTER_LOG_POS=262;

START SLAVE;
SHOW SLAVE STATUS \G
...
...
Slave_IO_Running: Yes   # 从服务器IO运行中
Slave_SQL_Running: Yes  # 从服务器SQL运行中
看到以上两项为yes说明当前已经配置成功

STOP SLAVE;             # 停止从服务器